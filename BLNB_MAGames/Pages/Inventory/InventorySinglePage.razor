@using SharedParams.Parameters
@using SharedParams.Tables
@using static SharedParams.Parameters.SharedParameters

@page "/Inventory/{BaseObjId}"

<div class="mb-4">
    @if (stocksByBaseObj.Count() > 0)
    {
        <h1 class="mb-4">
            @($"{stocksByBaseObj.First().BaseObj?.Name} " +
                $"{(string.IsNullOrEmpty(stocksByBaseObj.First().BaseObj?.Edition) ? "" : $"( {stocksByBaseObj.First().BaseObj?.Edition} ) ")}")
        </h1>

        <div class="row mb-4">
            <div class="col-md-6 d-flex flex-row justify-content-center">
                <img src="@MainImage" class="img-fluid rounded border" alt="Image principale" />
                <div class="d-flex flex-wrap mt-2">
                    @foreach (var img in stocksByBaseObj.First().BaseObj.lstImages)
                    {
                        <img src="@img" class="img-thumbnail me-2" style="height: 80px; cursor: pointer;" @onclick="() => MainImage = img.Image" />
                    }
                </div>
            </div>
            <div class="col-md-6">
                <p><strong>Marque:</strong> @stocksByBaseObj.First().BaseObj.Marque?.Name</p>
                <p><strong>Type de vente:</strong> @stocksByBaseObj.First().BaseObj.SaleType?.Name</p>
            </div>
        </div>

        <h4>Choisissez une version :</h4>

        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
            @foreach (var stock in stocksByBaseObj)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body">
                            <divc class="d-flex flex-row justify-content-between">
                                <h5 class="card-title">@stock.Condition?.Name</h5>
                                <p class="card-text text-muted fs-6 my-0">@stock.AddedDate.ToString("yyyy-MM-dd")</p>

                            </divc>
                            <div class="d-flex flex-row gap-4">
                                @if (stock.BoxRate != null)
                                {
                                    <p class="card-text text-muted">Boite : @stock.BoxRate</p>
                                }
                                @if (stock.ManualRate != null)
                                {
                                    <p class="card-text text-muted">Manuel : @stock.ManualRate</p>
                                }
                                @if (stock.CDRate != null)
                                {
                                    <p class="card-text text-muted">Disque : @stock.CDRate</p>
                                }
                            </div>

                            @if (stock.Comments != null)
                            {
                                <p class="card-text text-muted">@stock.Comments</p>
                            }

                            <p class="card-text my-0">Prix : <strong class="text-success">@stock.EstimatedSalePrice.ToString("C")</strong></p>

                            @if (stock.BuyPrice != null)
                            {
                                <p class="card-text text-muted fs-6 my-0">Prix d'achat : @(stock.BuyPrice) $</p>
                            }
                            else
                            {
                                <p class="card-text text-muted fs-6 my-0">Dans le <span class="text-primary text-decoration-underline cursor-pointer" @onclick="GoToLot">lot #@stock.Lot!.Id</span></p>
                            }

                        </div>
                        <div class="card-footer d-flex flex-row gap-4">
                            <button class="btn btn-outline-danger" @onclick="() => OpenModaleSold(stock)">Marquer comme vendu</button>
                            <button class="btn btn-outline-dark"
                                    @onclick="() => _cartService.AddItem(stock)"
                                    disabled="@_cartService.Items.Any(i => i.Id == stock.Id)">
                                @(_cartService.Items.Any(i => i.Id == stock.Id) ? "Dans le lot de vente" : "Ajouter au lot de vente")
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>


<BLNB_MAGames.Pages.Components.Modale.Modale _isShown="isModaleSoldOpen" _class="col-8" _noButton=true _onClose="() => OpenModaleSold(new Stocks())">
    <_body>
        <BLNB_MAGames.Pages.Components.MarquerCommeVendu.MarquerCommeVendu name="@(SoldStock.BaseObj.Name + (!string.IsNullOrEmpty(SoldStock.BaseObj.Edition) ? " ( " + SoldStock.BaseObj.Edition + " )" : "" ))" OnPriceSoldChanged="HandlePriceSold"></BLNB_MAGames.Pages.Components.MarquerCommeVendu.MarquerCommeVendu>
    </_body>
</BLNB_MAGames.Pages.Components.Modale.Modale>

