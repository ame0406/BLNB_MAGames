@using SharedParams.Parameters
@using SharedParams.Tables
@using static SharedParams.Parameters.SharedParameters

@page "/Inventory/{mode}/{BaseObjId}"

<div class="mb-4">
    <a class="neon-back-arrow text-decoration-none d-inline-flex align-items-center mb-3"
       href="/AllInventory/1">
        <i class="bi bi-arrow-left-circle-fill me-2"></i>
        <span>Retour</span>
    </a>

    @if (stocksByBaseObj.Count() > 0 && modeint == (int)InventoryMode.All)
    {
        <h1 class="mb-4">
            @($"{stocksByBaseObj.First().BaseObj?.Name} " +
                $"{(string.IsNullOrEmpty(stocksByBaseObj.First().BaseObj?.Edition) ? "" : $"( {stocksByBaseObj.First().BaseObj?.Edition} ) ")}")
        </h1>

        <div class="row mb-4">
            <div class="col-md-6 d-flex flex-row justify-content-center">
                <img src="@MainImage" class="img-fluid rounded border" alt="Image principale" />
                <div class="d-flex flex-wrap mt-2">
                    @foreach (var img in stocksByBaseObj.First().BaseObj.lstImages)
                    {
                        <img src="@img" class="img-thumbnail me-2" style="height: 80px; cursor: pointer;" @onclick="() => MainImage = img.Image" />
                    }
                </div>
            </div>
            <div class="col-md-6">
                <p><strong>Marque:</strong> @stocksByBaseObj.First().BaseObj.Marque?.Name</p>
                <p><strong>Type de vente:</strong> @stocksByBaseObj.First().BaseObj.SaleType?.Name</p>
            </div>
        </div>

        <h4>Choisissez une version :</h4>

        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
            @foreach (var stock in stocksByBaseObj)
            {
                <div class="col">
                    <div class="card h-100 bg-dark">
                        <div class="card-body">
                            @if (stock.ToBoth)
                            {
                                <span class="position-absolute top-0 start-0 m-2" title="Visible dans les 2 inventaires">
                                    🔗
                                </span>
                            }
                            <div class="d-flex flex-row justify-content-between align-items-center">
                                <div class="mb-2 d-flex flex-row gap-4">
                                    <h5 class="card-title">@stock.Condition?.Name</h5>
                                </div>

                                <div class="d-flex gap-2 align-items-center">
                                    <p class="card-text text-muted fs-6 my-0">@stock.AddedDate.ToString("yyyy-MM-dd")</p>
                                </div>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                @if (stock.BoxRate != null)
                                {
                                    <p class="card-text text-muted">Boite : @stock.BoxRate</p>
                                }
                                @if (stock.ManualRate != null)
                                {
                                    <p class="card-text text-muted">Manuel : @stock.ManualRate</p>
                                }
                                @if (stock.CDRate != null)
                                {
                                    <p class="card-text text-muted">Disque : @stock.CDRate</p>
                                }
                            </div>

                            @if (stock.Comments != null)
                            {
                                <p class="card-text text-muted">@stock.Comments</p>
                            }

                            <p class="card-text my-0">Prix : <strong class="text-success">@stock.EstimatedSalePrice.ToString("C")</strong></p>

                            @if (stock.BuyPrice != null)
                            {
                                <p class="card-text text-muted fs-6 my-0">Prix d'achat : @(stock.BuyPrice) $</p>
                            }
                            else
                            {
                                <p class="card-text text-muted fs-6 my-0">Dans le <span class="text-primary text-decoration-underline cursor-pointer" @onclick="() => GoToLot(stock.Lot!.Id)">lot #@stock.Lot!.Id</span></p>
                            }

                        </div>
                        <div class="card-footer d-flex flex-row gap-4">
                            <button class="btn btn-outline-danger" @onclick="() => OpenModaleSold(stock)">Marquer comme vendu</button>
                            <button class="btn btn-outline-primary"
                                    @onclick="() => _cartService.AddItem(stock)"
                                    disabled="@_cartService.Items.Any(i => i.Id == stock.Id)">
                                @(_cartService.Items.Any(i => i.Id == stock.Id) ? "Dans le lot de vente" : "Ajouter au lot de vente")
                            </button>
                            <i class="bi bi-pencil-square text-warning cursor-pointer fs-1"
                               title="Modifier"
                               role="button"
                               @onclick='() => _navigationManager.NavigateTo($"EditStock/{stock.Id}")'></i>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else if (modeint == (int)InventoryMode.ByLots)
    {
        <div class="card bg-dark text-light p-4 mb-5 shadow-lg rounded-4 border border-info">
            <h3 class="text-info mb-3">🧾 Informations générales</h3>
            <p><strong>Date de création :</strong> @Lot.CreationDate.ToString("yyyy-MM-dd")</p>
            <p><strong>Prix d'achat :</strong> @Lot.PrixDachat.ToString("C")</p>
            <p><strong>Total estimé de vente :</strong> @Lot.Stocks.Sum(s => s.EstimatedSalePrice ?? 0).ToString("C")</p>
            <p><strong>Nombre d’objets :</strong> @Lot.Stocks.Count</p>
            <p><strong>Objets vendus :</strong> @Lot.Stocks.Count(s => s.SoldPrice != null)</p>
        </div>

        <h3 class="text-info mb-3">📦 Objets dans le lot</h3>

        <div class="table-responsive">
            <table class="table table-dark table-bordered table-hover text-center align-middle">
                <thead class="table-info text-dark">
                    <tr>
                        <th>ID</th>
                        <th>Estimation</th>
                        <th>Prix vendu</th>
                        <th>Date de vente</th>
                        <th>Statut</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var stock in Lot.Stocks)
                    {
                        <tr class="@((stock.SoldPrice != null ? "table-success" : "table-secondary"))">
                            <td>@stock.Id</td>
                            <td>@(stock.EstimatedSalePrice?.ToString("C") ?? "-")</td>
                            <td>@(stock.SoldPrice?.ToString("C") ?? "-")</td>
                            <td>@(stock.SoldDate?.ToString("yyyy-MM-dd") ?? "-")</td>
                            <td>
                                @(stock.SoldPrice != null ? "Vendu" : "Actif")
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    
</div>


<BLNB_MAGames.Pages.Components.Modale.Modale _isShown="isModaleSoldOpen" _class="col-8" _noButton=true _onClose="() => OpenModaleSold(new Stocks())">
    <_body>
        <BLNB_MAGames.Pages.Components.MarquerCommeVendu.MarquerCommeVendu name="@(SoldStock.BaseObj.Name + (!string.IsNullOrEmpty(SoldStock.BaseObj.Edition) ? " ( " + SoldStock.BaseObj.Edition + " )" : "" ))" OnPriceSoldChanged="HandlePriceSold" CloseModale="() => OpenModaleSold(new Stocks())"></BLNB_MAGames.Pages.Components.MarquerCommeVendu.MarquerCommeVendu>
    </_body>
</BLNB_MAGames.Pages.Components.Modale.Modale>

<style>
    .neon-back-arrow {
        color: #00b7ff;
        font-size: 1.2rem;
        transition: all 0.2s ease-in-out;
        text-shadow: 0 0 5px #00b7ff;
    }

        .neon-back-arrow:hover {
            color: white;
            text-shadow: 0 0 8px #00b7ff, 0 0 16px #00b7ff;
            transform: scale(1.05);
        }

        .neon-back-arrow i {
            font-size: 1.5rem;
        }
</style>